day02
0.복습

ㅁ클래스ㅁ

객체지향 프로그래밍
: 추상화된 클래스로 객체를 만들고 객체들 간의 관계를 맺어 상호작용 하는 프로그래밍 기법

1.사용자 정의 타입
	ex) int num = 10;
	    클래스명 객체명 = new 생성자();

2. 연관성 있는 저장공간과 기능을 한 곳에 모아 편리하게  관리할 수 있는 것

3. 객체를 생성하기 위한 틀, 설계도

클래스와 객체
	class : 똑같은 무언가를 계속 만들어 낼 수 있는 설계도
	객체(object) : 클래스에 의해 만들어진 결과물(자동차, 붕어빵)

클래스 선언
CLASS 클래스명{
	변수; //멤버 변수, 필드, 전역변수
	메소드(){} // 멤버 메소드
	//class를 구성하는 모든 변수, 메소드를 합쳐서 클래스의 멤버라고 함

}

생성자
클래스명 객체명 = new (생성자)클래스명();
1.객체를 생성할 때 실행되는 코드가 작성되어 있다
2. 주로 해당 클래스의 필드(멤버변수)를 초기화 하는 목적으로 사용

기본생성자
public 클래스명(){}
: 클래스 선언시 자동으로 선언되며, 사용자가 직접 생성자를 선언하게 되면 자동으로 만들어주지 않음

this
-객체 자신을 의미한다 -> 객체 자신의 주소값을 담고 있음
class Student{
	//필드	
	String name;
	int age;

	//생성자	
	Student(string name, int age){
		this.name = name; (객체 소속임을 표기하기 위해 this)
		this.age = age;
	}

}

this()
자기자신의 생성자를 의미
생성자 내부에서만 사용가능하며 최상단에 작성해야함

1.Static

static : 정적인 <-> 동적인
자바의 저장공간이 프로그램이 시작되고 끝날 때까지 유지된다면 -> 정적이다
프로그램 실행도중 생겨나거나 사라질 수 있다면 => 동적이다

main 메소드의 코드가 한줄씩 실행 => new를 통해 객체를 생성한 코드가 있다면 
실행도중에 그 객체를 생성함 -> 객체  저장공간, 이 객체는 동적으로 생성 됨
=> 객체가 생성되는 heap 영역을 동적 메모리 영역


실행과 만들어져 있는 static 저장공간은 프로그램이 종료 되어야만 메모리에서 사라진다.
static이 붙은 저장공간은 method 영역이다

static 키워드 종류
- 멤버 변수(필드)의 종류
	static이 붙은 변수 : static 변수, 클래스 변수, 정적 변수,....
	static이 안 붙은 변수 : instance 변수

-멤버 메소드의 종류
	static이 붙은 메소드 : static 메소드, 클래스 메소드, 정적 메소드
	static이 안 붙은 메소드 : instance 메소드

1. static변수, static 메소드는 객체를 생성하지 않아도 사용 가능
	클래스명.멤버명; 객체명.멤버명;
2. static 변수는 객체와 상관없이 하나의 저장공간이므로 모든 객체가공유해서 사용한다.
	즉, 모든 객체에서 공통으로 사용되는 변수에 static을 붙이는 것을 고려한다.

3.static 메소드는 인스턴스 멤버를 사용할 수 없다.
  static 메소드가 메모리에서 사용 준비가 끝나도 인스턴스 멤버는 객체를 생성하기 전까지는 
  사용할 수 없기 때문이다.

4.크래스명.멤버명으로 사용하는 것으 권장한다 -> 인스턴스 멤버와 구별해주기 위해서

상속
1. 기존에 선언된 클래스의 멤버(생성자는 제외)를 새롭게 만들 클래스에서 
 사용하고 싶을 때 상속을 받고 새로운 기능만 추가한다.(확장한다)

2. 부모 클래스를 먼저 선언하고 자식 클래스를 선언해야한다.

상속 문법 

class parent{
	parents 멤버;


	void method01(){

}

class Child extends Parents {
	Parents,Child 멤버;


}

parents : 부모클래스, 슈퍼 클래스, 기반 클래스, 상위 클래스
child : 자식클래스, 서브 클래스, 파생 클래스, 하위 클래스

** 주의사항
	자바에서 상속은 단일상속만 지원한다.(자식 클래스는 1개의 부모 클래스만을 가진다)







